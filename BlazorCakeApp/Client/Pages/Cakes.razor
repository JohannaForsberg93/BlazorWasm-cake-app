@page "/cake"
@using BlazorCakeApp.Shared.Dto
@using BlazorCakeApp.Client.Repositories
@inject NavigationManager navigationManager
@inject ICakeRepository CakeRepository
@inject ILocalStorageService LocalStorage
@inject ICartRepository CartRepository


<div class="container">
	<h3 class="text-center">Tårtor</h3>


	<div class="container py-4">
		<div class="row">
			<div class="col-md-5 mx-auto">
				<div class="small fw-light"></div>
				<div class="input-group">
					<input class="form-control border-end-0 border rounded-pill" type="search" placeholder="Sök" @bind-value="searchText" @bind-value:event="oninput" >
				</div>
			</div>
		</div>
	</div>
	
	<div class="row g-3 mt-3">
		@foreach (var cake in FilteredCakes)
		{
			if (cake.Available == true)
			{
				<div class="col md-4 col-4 margin-bottom-style">
					<div class="card">
						<img src="https://images.unsplash.com/photo-1578985545062-69928b1d9587?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=789&q=80" class="card-img-top img-fit" alt="...">
						<div class="card-body">
							<h5 class="card-title">@cake.CakeName</h5>
							<p class="card-text">@cake.Description</p>
							<div class="text-end">
								<h5 class="card-text float-lg-start fw-bold">@cake.Price :-</h5>
								<button @onclick="() => AddToCart(cake)"  class="btn btn-secondary float-md-start mx-2">Köp</button>
								<a href="/cake/@cake.Id" class="btn btn-primary">Läs mer</a>
							</div>
						</div>
					</div>
				</div>
			}
		}
	</div>
</div>


@code {

	public string searchText = string.Empty;


	List<CakeDto> FilteredCakes => CakeRepository.Cakes.Where(
		cake => cake.CakeName.ToLower().Contains(searchText.ToLower())).ToList();



	protected override async Task OnInitializedAsync()
	{
		await CakeRepository.GetAllCakes();

	}

	private async Task AddToCart(CakeDto cake)
	{
		await CartRepository.AddToCart(cake);

	//var cart = await LocalStorage.GetItemAsync <List<OrderDto>>("cart");

	//if (cart == null)
	//{
	//	cart = new List<OrderDto>();
	//	cart.Add(new OrderDto { Cake = cake.CakeName, Amount = 1, Price = cake.Price });
	//	await LocalStorage.SetItemAsync("cart", cart);
	//}
	//else
	//{
	//	cart.Add(new OrderDto { Cake = cake.CakeName, Amount = 1, Price = cake.Price });
	//	await LocalStorage.SetItemAsync("cart", cart);
	//}
	}
}


